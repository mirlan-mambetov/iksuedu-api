// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["prismaSchemaFolder"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// USER MODEL
model Teacher {
  id          String    @id @default(cuid())
  firstName   String    @map("first_name")
  lastName    String    @map("last_name")
  email       String    @unique
  password    String  
  tests       Quiz[]    @relation("TeacherTests")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  @@map("teacher")
}
// DEFENDANT
model Defendant {
  id          String    @id @default(cuid())
  firstName   String    @map("first_name")
  lastName    String    @map("last_name")
  email       String    @unique
  school      String    
  tests       Quiz[]    @relation("TestDefendant")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  @@map("defendant")
}
// TEST MODEL
model Quiz {
  id          String      @id @default(cuid())
  title       String     
  expires     DateTime
  teacherId   String
  teacher     Teacher     @relation("TeacherTests", fields: [teacherId], references: [id])
  questions   Question[]  
  defendants  Defendant[] @relation("TestDefendant")
  passed      Int?
  fileds      Int?
  url         String      @unique
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  @@map("quiz")
}
// QUESTION MODEL
model Question {
  id          String    @id @default(cuid())
  content     String
  test        Quiz      @relation(fields: [testId], references: [id], onDelete: Cascade)
  testId      String
  answers     Answer[]  
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@map("questions")

}
// ANSWER MODEL
model Answer {
  id          String      @id @default(cuid())
  content     String
  isCorrect   Boolean
  questionId  String
  question    Question    @relation(fields: [questionId], references: [id],onDelete: Cascade)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  @@map("answers")
}